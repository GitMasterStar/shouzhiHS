<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sz.dao.DeptMapper">
  <resultMap id="BaseResultMap" type="com.sz.pojo.Dept">
    <constructor>
      <idArg column="ID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="DNAME" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="PARENTID" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="PRINCIPAL" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="REMARK" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="STANDBY" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    ID, DNAME, PARENTID, PRINCIPAL, REMARK, STANDBY
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dept
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dept
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sz.pojo.Dept">
    insert into dept (ID, DNAME, PARENTID, 
      PRINCIPAL, REMARK, STANDBY
      )
    values (#{id,jdbcType=INTEGER}, #{dname,jdbcType=VARCHAR}, #{parentid,jdbcType=INTEGER},
      #{principal,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{standby,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sz.pojo.Dept">
    insert into dept
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="dname != null">
        DNAME,
      </if>
      <if test="parentid != null">
        PARENTID,
      </if>
      <if test="principal != null">
        PRINCIPAL,
      </if>
      <if test="remark != null">
        REMARK,
      </if>
      <if test="standby != null">
        STANDBY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="dname != null">
        #{dname,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        #{parentid,jdbcType=INTEGER},
      </if>
      <if test="principal != null">
        #{principal,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="standby != null">
        #{standby,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sz.pojo.Dept">
    update dept
    <set>
      <if test="dname != null">
        DNAME = #{dname,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        PARENTID = #{parentid,jdbcType=INTEGER},
      </if>
      <if test="principal != null">
        PRINCIPAL = #{principal,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="standby != null">
        STANDBY = #{standby,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sz.pojo.Dept">
    update dept
    set DNAME = #{dname,jdbcType=VARCHAR},
      PARENTID = #{parentid,jdbcType=INTEGER},
      PRINCIPAL = #{principal,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      STANDBY = #{standby,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="getChildCount" resultType="int">
    SELECT COUNT(*) FROM dept WHERE PARENTID=#{id}

  </select>

  <select id="findObjects" resultType="map">
    SELECT d.*,(SELECT DNAME FROM dept e
    WHERE d.PARENTID=e.ID) PARENTNAME
    FROM dept d
  </select>
  <select id="findZTreeNodes" resultType="com.sz.common.vo.Node">
    SELECT ID,DNAME name,PARENTID
    FROM dept
  </select>
</mapper>