<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sz.dao.SixGoldDetailMapper" >
  <resultMap id="BaseResultMap" type="com.sz.pojo.SixGoldDetail" >
    <constructor >
      <idArg column="ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="WORKERNAME" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="WORKERIDCARD" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="PAYMONTH" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="ENDOWMENTENTERPRISE" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="ENDOWMENTPERSONAGE" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="MEDICALENTERPRISE" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="MEDICALPERSONAGE" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="UNEMPLOYMENTENTERPRISE" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="UNEMPLOYMENTPERSONAGE" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="INDUCTRIALINJURYENTERPRISE" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="MATERNITYENTERPRISE" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="HOUSINGFUNDENTERPRISE" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="HOUSINGFUNDPERSONAGE" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="COLLECTENTERPRISE" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="COLLECTPERSONAGE" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="COLLECT" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="MONTH" jdbcType="DATE" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    ID, WORKERNAME, WORKERIDCARD, PAYMONTH, ENDOWMENTENTERPRISE, ENDOWMENTPERSONAGE, MEDICALENTERPRISE,
    MEDICALPERSONAGE, UNEMPLOYMENTENTERPRISE, UNEMPLOYMENTPERSONAGE, INDUCTRIALINJURYENTERPRISE, 
    MATERNITYENTERPRISE, HOUSINGFUNDENTERPRISE, HOUSINGFUNDPERSONAGE, COLLECTENTERPRISE, 
    COLLECTPERSONAGE, COLLECT, MONTH
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sixgolddetail
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sixgolddetail
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sz.pojo.SixGoldDetail" >
    insert into sixgolddetail (ID, WORKERNAME, WORKERIDCARD,
      PAYMONTH, ENDOWMENTENTERPRISE, ENDOWMENTPERSONAGE,
      MEDICALENTERPRISE, MEDICALPERSONAGE, UNEMPLOYMENTENTERPRISE,
      UNEMPLOYMENTPERSONAGE, INDUCTRIALINJURYENTERPRISE,
      MATERNITYENTERPRISE, HOUSINGFUNDENTERPRISE,
      HOUSINGFUNDPERSONAGE, COLLECTENTERPRISE,
      COLLECTPERSONAGE, COLLECT, MONTH
      )
    values (#{id,jdbcType=INTEGER}, #{workername,jdbcType=VARCHAR}, #{workeridcard,jdbcType=VARCHAR},
      #{paymonth,jdbcType=INTEGER}, #{endowmententerprise,jdbcType=DOUBLE}, #{endowmentpersonage,jdbcType=DOUBLE},
      #{medicalenterprise,jdbcType=DOUBLE}, #{medicalpersonage,jdbcType=DOUBLE}, #{unemploymententerprise,jdbcType=DOUBLE}, 
      #{unemploymentpersonage,jdbcType=DOUBLE}, #{inductrialinjuryenterprise,jdbcType=DOUBLE}, 
      #{maternityenterprise,jdbcType=DOUBLE}, #{housingfundenterprise,jdbcType=DOUBLE}, 
      #{housingfundpersonage,jdbcType=DOUBLE}, #{collectenterprise,jdbcType=DOUBLE}, 
      #{collectpersonage,jdbcType=DOUBLE}, #{collect,jdbcType=DOUBLE}, #{month,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sz.pojo.SixGoldDetail" >
    insert into sixgolddetail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="workername != null" >
        WORKERNAME,
      </if>
      <if test="workeridcard != null" >
        WORKERIDCARD,
      </if>
      <if test="paymonth != null" >
        PAYMONTH,
      </if>
      <if test="endowmententerprise != null" >
        ENDOWMENTENTERPRISE,
      </if>
      <if test="endowmentpersonage != null" >
        ENDOWMENTPERSONAGE,
      </if>
      <if test="medicalenterprise != null" >
        MEDICALENTERPRISE,
      </if>
      <if test="medicalpersonage != null" >
        MEDICALPERSONAGE,
      </if>
      <if test="unemploymententerprise != null" >
        UNEMPLOYMENTENTERPRISE,
      </if>
      <if test="unemploymentpersonage != null" >
        UNEMPLOYMENTPERSONAGE,
      </if>
      <if test="inductrialinjuryenterprise != null" >
        INDUCTRIALINJURYENTERPRISE,
      </if>
      <if test="maternityenterprise != null" >
        MATERNITYENTERPRISE,
      </if>
      <if test="housingfundenterprise != null" >
        HOUSINGFUNDENTERPRISE,
      </if>
      <if test="housingfundpersonage != null" >
        HOUSINGFUNDPERSONAGE,
      </if>
      <if test="collectenterprise != null" >
        COLLECTENTERPRISE,
      </if>
      <if test="collectpersonage != null" >
        COLLECTPERSONAGE,
      </if>
      <if test="collect != null" >
        COLLECT,
      </if>
      <if test="month != null" >
        MONTH,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="workername != null" >
        #{workername,jdbcType=VARCHAR},
      </if>
      <if test="workeridcard != null" >
        #{workeridcard,jdbcType=VARCHAR},
      </if>
      <if test="paymonth != null" >
        #{paymonth,jdbcType=INTEGER},
      </if>
      <if test="endowmententerprise != null" >
        #{endowmententerprise,jdbcType=DOUBLE},
      </if>
      <if test="endowmentpersonage != null" >
        #{endowmentpersonage,jdbcType=DOUBLE},
      </if>
      <if test="medicalenterprise != null" >
        #{medicalenterprise,jdbcType=DOUBLE},
      </if>
      <if test="medicalpersonage != null" >
        #{medicalpersonage,jdbcType=DOUBLE},
      </if>
      <if test="unemploymententerprise != null" >
        #{unemploymententerprise,jdbcType=DOUBLE},
      </if>
      <if test="unemploymentpersonage != null" >
        #{unemploymentpersonage,jdbcType=DOUBLE},
      </if>
      <if test="inductrialinjuryenterprise != null" >
        #{inductrialinjuryenterprise,jdbcType=DOUBLE},
      </if>
      <if test="maternityenterprise != null" >
        #{maternityenterprise,jdbcType=DOUBLE},
      </if>
      <if test="housingfundenterprise != null" >
        #{housingfundenterprise,jdbcType=DOUBLE},
      </if>
      <if test="housingfundpersonage != null" >
        #{housingfundpersonage,jdbcType=DOUBLE},
      </if>
      <if test="collectenterprise != null" >
        #{collectenterprise,jdbcType=DOUBLE},
      </if>
      <if test="collectpersonage != null" >
        #{collectpersonage,jdbcType=DOUBLE},
      </if>
      <if test="collect != null" >
        #{collect,jdbcType=DOUBLE},
      </if>
      <if test="month != null" >
        #{month,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sz.pojo.SixGoldDetail" >
    update sixgolddetail
    <set >
      <if test="workername != null" >
        WORKERNAME = #{workername,jdbcType=VARCHAR},
      </if>
      <if test="workeridcard != null" >
        WORKERIDCARD = #{workeridcard,jdbcType=VARCHAR},
      </if>
      <if test="paymonth != null" >
        PAYMONTH = #{paymonth,jdbcType=INTEGER},
      </if>
      <if test="endowmententerprise != null" >
        ENDOWMENTENTERPRISE = #{endowmententerprise,jdbcType=DOUBLE},
      </if>
      <if test="endowmentpersonage != null" >
        ENDOWMENTPERSONAGE = #{endowmentpersonage,jdbcType=DOUBLE},
      </if>
      <if test="medicalenterprise != null" >
        MEDICALENTERPRISE = #{medicalenterprise,jdbcType=DOUBLE},
      </if>
      <if test="medicalpersonage != null" >
        MEDICALPERSONAGE = #{medicalpersonage,jdbcType=DOUBLE},
      </if>
      <if test="unemploymententerprise != null" >
        UNEMPLOYMENTENTERPRISE = #{unemploymententerprise,jdbcType=DOUBLE},
      </if>
      <if test="unemploymentpersonage != null" >
        UNEMPLOYMENTPERSONAGE = #{unemploymentpersonage,jdbcType=DOUBLE},
      </if>
      <if test="inductrialinjuryenterprise != null" >
        INDUCTRIALINJURYENTERPRISE = #{inductrialinjuryenterprise,jdbcType=DOUBLE},
      </if>
      <if test="maternityenterprise != null" >
        MATERNITYENTERPRISE = #{maternityenterprise,jdbcType=DOUBLE},
      </if>
      <if test="housingfundenterprise != null" >
        HOUSINGFUNDENTERPRISE = #{housingfundenterprise,jdbcType=DOUBLE},
      </if>
      <if test="housingfundpersonage != null" >
        HOUSINGFUNDPERSONAGE = #{housingfundpersonage,jdbcType=DOUBLE},
      </if>
      <if test="collectenterprise != null" >
        COLLECTENTERPRISE = #{collectenterprise,jdbcType=DOUBLE},
      </if>
      <if test="collectpersonage != null" >
        COLLECTPERSONAGE = #{collectpersonage,jdbcType=DOUBLE},
      </if>
      <if test="collect != null" >
        COLLECT = #{collect,jdbcType=DOUBLE},
      </if>
      <if test="month != null" >
        MONTH = #{month,jdbcType=DATE},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sz.pojo.SixGoldDetail" >
    update sixgolddetail
    set WORKERNAME = #{workername,jdbcType=VARCHAR},
      WORKERIDCARD = #{workeridcard,jdbcType=VARCHAR},
      PAYMONTH = #{paymonth,jdbcType=INTEGER},
      ENDOWMENTENTERPRISE = #{endowmententerprise,jdbcType=DOUBLE},
      ENDOWMENTPERSONAGE = #{endowmentpersonage,jdbcType=DOUBLE},
      MEDICALENTERPRISE = #{medicalenterprise,jdbcType=DOUBLE},
      MEDICALPERSONAGE = #{medicalpersonage,jdbcType=DOUBLE},
      UNEMPLOYMENTENTERPRISE = #{unemploymententerprise,jdbcType=DOUBLE},
      UNEMPLOYMENTPERSONAGE = #{unemploymentpersonage,jdbcType=DOUBLE},
      INDUCTRIALINJURYENTERPRISE = #{inductrialinjuryenterprise,jdbcType=DOUBLE},
      MATERNITYENTERPRISE = #{maternityenterprise,jdbcType=DOUBLE},
      HOUSINGFUNDENTERPRISE = #{housingfundenterprise,jdbcType=DOUBLE},
      HOUSINGFUNDPERSONAGE = #{housingfundpersonage,jdbcType=DOUBLE},
      COLLECTENTERPRISE = #{collectenterprise,jdbcType=DOUBLE},
      COLLECTPERSONAGE = #{collectpersonage,jdbcType=DOUBLE},
      COLLECT = #{collect,jdbcType=DOUBLE},
      MONTH = #{month,jdbcType=DATE}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="getRowCount" resultType="java.lang.Integer" parameterType="String">
    SELECT COUNT(*) FROM sixgolddetail
    <include refid="wherename"/>

  </select>
  <sql id="wherename">
    <where>
      <if test="workername!=null and workername!='' ">
           workername like cancat("%",#{workername},"%")
      </if>
      <if test="months!=null and year!=null">
        AND month(Month)=#{months} and year(Month)=#{year}
    </if>
    </where>
  </sql>
  <select id="findPageObjects" resultType="com.sz.pojo.SixGoldDetail" parameterType="com.sz.pojo.SixGoldDetail">
    SELECT * FROM sixgolddetail
    <include refid="wherename"/>
    limit #{startIndex},#{pageSize}
  </select>

  <select id="selectSame" resultType="java.lang.Integer">
    SELECT COUNT(WORKERIDCARD) FROM sixgolddetail where year(Month)=#{month} and month(Month)=#{year} GROUP BY WORKERIDCARD HAVING COUNT(#{IdCard})>1
  </select>

  <insert id="insertAll" parameterType="java.util.List">
   INSERT INTO sixgolddetail ( WORKERNAME, WORKERIDCARD,
    PAYMONTH, ENDOWMENTENTERPRISE, ENDOWMENTPERSONAGE,
    MEDICALENTERPRISE, MEDICALPERSONAGE, UNEMPLOYMENTENTERPRISE,
    UNEMPLOYMENTPERSONAGE, INDUCTRIALINJURYENTERPRISE,
    MATERNITYENTERPRISE, HOUSINGFUNDENTERPRISE,
    HOUSINGFUNDPERSONAGE, COLLECTENTERPRISE,
    COLLECTPERSONAGE, COLLECT, MONTH)
    VALUES
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.workername,jdbcType=VARCHAR}, #{item.workeridcard,jdbcType=VARCHAR},
      #{item.paymonth,jdbcType=INTEGER}, #{item.endowmententerprise,jdbcType=DOUBLE}, #{item.endowmentpersonage,jdbcType=DOUBLE},
      #{item.medicalenterprise,jdbcType=DOUBLE}, #{item.medicalpersonage,jdbcType=DOUBLE}, #{item.unemploymententerprise,jdbcType=DOUBLE},
      #{item.unemploymentpersonage,jdbcType=DOUBLE}, #{item.inductrialinjuryenterprise,jdbcType=DOUBLE},
      #{item.maternityenterprise,jdbcType=DOUBLE}, #{item.housingfundenterprise,jdbcType=DOUBLE},
      #{item.housingfundpersonage,jdbcType=DOUBLE}, #{item.collectenterprise,jdbcType=DOUBLE},
      #{item.collectpersonage,jdbcType=DOUBLE}, #{item.collect,jdbcType=DOUBLE}, #{item.month,jdbcType=DATE}
      )
    </foreach>
  </insert>
</mapper>